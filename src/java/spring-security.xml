<?xml version="1.0" encoding="UTF-8"?>

<!--
    Document   : spring-security.xml
    Created on : Feb 09, 2017, 12:43 PM
    Author     : awal
    Description:
        Purpose of the document follows.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://www.springframework.org/schema/security"
 xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
   http://www.springframework.org/schema/security
   http://www.springframework.org/schema/security/spring-security-4.0.xsd">

 <!-- This is where we configure Spring-Security  -->
 <security:http auto-config="true" use-expressions="true">

  <security:intercept-url pattern="/apps/auth/login" access="permitAll"/>
  <security:intercept-url pattern="/apps/auth/logout" access="permitAll"/>
  <security:intercept-url pattern="/apps/main/admin" access="hasRole('ROLE_ADMIN')"/>
  <security:intercept-url pattern="/apps/main/**" access="isAuthenticated()"/>
  <!-- -->
  <security:intercept-url pattern="/apps/auth/currentsession" access="permitAll"/>
  <security:intercept-url pattern="/apps/data/**" access="isAuthenticated()"/>
  <security:intercept-url pattern="/apps/save/**" access="isAuthenticated()"/>

  <security:form-login
    login-page="/apps/auth/login"
    authentication-failure-url="/apps/auth/login?error=true"
    username-parameter="username"
    password-parameter="password"
    login-processing-url="/apps/auth/security"
    always-use-default-target="true"
    authentication-success-handler-ref="customAuthenticationSuccessHandler"/>

  <security:logout
    invalidate-session="true"
    logout-success-url="/apps/auth/login"
    logout-url="/apps/auth/logout"
    delete-cookies="JSESSIONID"/>
  
  <security:access-denied-handler
    error-page="/apps/auth/denied"/>
  
  <security:csrf/>

 </security:http>

 <!-- ****************************** DB AUTHENTICATION *********************************** -->

 <!-- Declare an authentication-manager to use a custom userDetailsService -->
   <security:authentication-manager>
     <security:authentication-provider user-service-ref="customUserDetailsService">
       <security:password-encoder ref="passwordEncoder"/>
     </security:authentication-provider>
   </security:authentication-manager>

   <!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
   <bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>
   
   <!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
   <bean id="customUserDetailsService" class="com.safasoft.yakes.auth.CustomUserDetailsService"/>


</beans>
